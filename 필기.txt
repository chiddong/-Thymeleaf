Thymeleaf
- 템플릿 엔진
- JSP 와 동일하게 클라이언트에게 반환할 페이지를 생성하는 역할
- Natural Templates 기반(서버 기술과 분리된 템플릿)
		- JSP 	> 디자이너가 작업하기에 불편한 환경
					> 디자인 코드와 비즈니스 코드가 섞여있는 환경
					> 뷰파일을 실행하기에 불편한 환경, 바로 확인이 힘든 환경
		- Thymeleaf 	> 코드 변경이 거의 없다.
							> 바로 실행이 가능하다. > 순수 HTML 페이지로 제작
							> 서버 코드가 포함이 되어 있어도 독립 실행이 가능

설정
1. pom.xml > X(JSP 사용 안함)

2. application.properties
	- MyBatis
	- Thymeleaf
	
파일 생성
- "com.test.thymeleaf.controller" 	> "TestController.java"
- "com.test.thymeleaf.persist"		> "AddressDAO.java"
													> "AddressDTO.java"
- "mapper" > "test.xml"
- templates > "m1.html"

  
   
   			Tymeleaf Standard Expression, 타임리프 표현식
   			- EL/JSTL 유사 
   			
   			1. Variable Expressions, 변수 표현식
   				- ${}
   				- 컨트롤러부터 전달된 값을 출력한다.
   				- JSP의 EL 역할
   			
   			2. Selection Variable Expressions, 선택 변수 표현식
   				- *{}
   				- 객체/맵 프로퍼티를 출력한다.
   				- th:object 속성과 같이 사용한다.
   			
   			3. Message Expressions, 메세지 표현식
   				- #{}
   				- 스프링 메시지를 출력한다.
   				- 전역 문자열(모든 페이지에서 공통으로 사용하는 문자열)
   				- 다국어 표현 지원
   			
   			4. Link URL Expressions, 링크 표현식
   				- @{}
   			
   			5. Fragment Expressions, 조각 표현식
   				- ~{}
   
